<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的简历</title>
    <url>/2022/06/24/myShelf/</url>
    <content><![CDATA[<ul>
<li>我的简历</li>
</ul>
<hr>
<p>#<strong>自我介绍</strong></p>
<hr>
<p>姓名：<strong>王连杰</strong>     </p>
<p> 出生日期：<strong>1999.07.08</strong>   </p>
<p>   年龄：<strong>22</strong></p>
<p>   性别：<strong>男</strong></p>
<p>学历：<strong>全日制本科</strong></p>
<h2 id><a href="#" class="headerlink" title></a><img src="/2022/06/24/myShelf/index.jpg" alt="这是图片"></h2><p>晴れた日より?菜が必要です。<br><a href="http://up.36992.com/pic/e6/c5/51/e6c551e768092c8655292d89a4034a74.jpg">http://up.36992.com/pic/e6/c5/51/e6c551e768092c8655292d89a4034a74.jpg</a></p>
<img src="/2022/06/24/myShelf/index.jpg" class title="This is an test image">

<p>#<strong>专业技能</strong></p>
<p>自学前端，熟悉Html5+Css3+Javascript、Vue框架、Element-ui、layui框架的使用，根据项目练习写过Vue+element-ui的后台管理系统，使用Hexo+github搭建个人博客：<a href="http://a182644.github.io/">阿杰の博客</a>, 个人感觉有上手项目的能力。</p>
<hr>
<p>#<strong>工作经历</strong></p>
<p>2021.06-07：</p>
<p>青州中联水泥有限公司担任中控室职员。</p>
<p>2021.08-2022.06：</p>
<p>山东潍微科技股份有限公司，先后担任了现场安装工程师、GIS系统软件测试、智慧水务平台测试、智慧营业系统前端ui等职位。</p>
<hr>
<p>#<strong>学校经历</strong></p>
<p>2017-2021：</p>
<p>潍坊科技学院——–计算机科学与技术专业 &#x2F;&#x2F;&#x2F;&#x2F;网页设计大赛二等奖、计算机操作员四级证书。</p>
<hr>
<p>#<strong>自我评价</strong></p>
<p>由于毕业考编，导致学习时间短，前端的学习还处于初级阶段，上手的智慧营收系统为前后端不分离项目，编写的时候感觉有点吃力（因为前后端都要写），个人学习能力比较强，希望<strong>贵公司</strong>能给我一个学习的机会！</p>
]]></content>
  </entry>
  <entry>
    <title>数组备忘</title>
    <url>/2022/06/24/arr/</url>
    <content><![CDATA[<h2 id="数组知识点备忘"><a href="#数组知识点备忘" class="headerlink" title="数组知识点备忘"></a>数组知识点备忘</h2><p>数组方法备忘单：</p>
<p>添加删除元素：</p>
<p>push(…items) —— 向尾端添加元素，</p>
<p>pop() —— 从尾端提取一个元素，</p>
<p>shift() —— 从首端提取一个元素，</p>
<p>unshift(…items) —— 向首端添加元素，</p>
<p>splice(pos, deleteCount, …items) —— 从 pos 开始删除 deleteCount 个元素，并插入 items。</p>
<p>slice(start, end) —— 创建一个新数组，将从索引 start 到索引 end（但不包括 end）的元素复制进去。</p>
<p>concat(…items) —— 返回一个新数组：复制当前数组的所有元素，并向其中添加 items。如果 items 中的任意一项是一个数组，那么就取其元素。</p>
<p>搜索元素：</p>
<p>indexOflastIndexOf(item, pos) —— 从索引 pos 开始搜索 item，搜索到则返回该项的索引，否则返回 -1。</p>
<p>includes(value) —— 如果数组有 value，则返回 true，否则返回 false。</p>
<p>findfilter(func) —— 通过 func 过滤元素，返回使 func 返回 true 的第一个值所有值。</p>
<p>findIndex 和 find 类似，但返回索引而不是值。</p>
<p>遍历元素：</p>
<p>forEach(func) —— 对每个元素都调用 func，不返回任何内容。</p>
<p>转换数组：</p>
<p>map(func) —— 根据对每个元素调用 func 的结果创建一个新数组。</p>
<p>sort(func) —— 对数组进行原位（in-place）排序，然后返回它。</p>
<p>reverse() —— 原位（in-place）反转数组，然后返回它。</p>
<p>splitjoin —— 将字符串转换为数组并返回。</p>
<p>reducereduceRight(func, initial) —— 通过对每个元素调用 func 计算数组上的单个值，并在调用之间传递中间结果。</p>
<p>其他：</p>
<p>Array.isArray(arr) 检查 arr 是否是一个数组。</p>
<p>请注意，sort，reverse 和 splice 方法修改的是数组本身。<br>这些是最常用的方法，它们覆盖 99％ 的用例。但是还有其他几个：</p>
<p>arr.some(fn)arr.every(fn) 检查数组。</p>
<p>与 map 类似，对数组的每个元素调用函数 fn。如果任何所有结果为 true，则返回 true，否则返回 false。<br>这两个方法的行为类似于  和 &amp;&amp; 运算符：如果 fn 返回一个真值，arr.some() 立即返回 true 并停止迭代其余数组项；如果 fn 返回一个假值，arr.every() 立即返回 false 并停止对其余数组项的迭代。<br>我们可以使用 every 来比较数组：<br>function arraysEqual(arr1, arr2) {<br>  return arr1.length &#x3D;&#x3D;&#x3D; arr2.length &amp;&amp; arr1.every((value, index) &#x3D; value &#x3D;&#x3D;&#x3D; arr2[index]);<br>}</p>
<p>alert( arraysEqual([1, 2], [1, 2]));  true</p>
<p>arr.fill(value, start, end) —— 从索引 start 到 end，用重复的 value 填充数组。</p>
<p>arr.copyWithin(target, start, end) —— 将从位置 start 到 end 的所有元素复制到 自身 的 target 位置（覆盖现有元素）。</p>
<p>arr.flat(depth)arr.flatMap(fn) 从多维数组创建一个新的扁平数组。</p>
<p>Array.of(element0[, element1[, …[, elementN]]]) 基于可变数量的参数创建一个新的 Array 实例，而不需要考虑参数的数量或类型。</p>
]]></content>
  </entry>
</search>
